from collections import Counter
import datetime
import os

User_Input = 'i'

#Initial text file with initial data

content = """Mr. Normal Gonzales
BIO1024 Biology (UW-2-1): 9am-10am, 12pm-1pm, 3pm-4pm
CHM1024 Chemistry (JC Hall 2): 10am-11am, 1pm-2pm, 4pm-5pm
PHY1024 Physics (Hall 3 GC): 11am-12pm, 2pm-3pm, 5pm-6pm
ENG1024 English (JC Hall 1): 8am-9am
"""

fileName = "timetables_24001.txt"

with open(fileName, "w") as file:
    file.write(content)

fileName = "timetables_24002.txt"

with open(fileName, "w") as file:
    file.write(content)

fileName = "timetables_24003.txt"

with open(fileName, "w") as file:
    file.write(content)

content = """BIO1024: pending
CHM1024: pending
PHY1024: pending
ENG1024: pending
"""

fileName = "assignments_24001.txt"

with open(fileName, "w") as file:
    file.write(content)

fileName = "assignments_24002.txt"

with open(fileName, "w") as file:
    file.write(content)

fileName = "assignments_24003.txt"

with open(fileName, "w") as file:
    file.write(content)

content = "0\n0\n0\n0\n0\n0\n0\n0\n0\n0"

fileName = "attendance_24001.txt"

with open(fileName, "w") as file:
    file.write(content)

fileName = "attendance_24002.txt"

with open(fileName, "w") as file:
    file.write(content)

fileName = "attendance_24003.txt"

with open(fileName, "w") as file:
    file.write(content)

content = """24001: Rex Vaquez
24002: Aston Clover
24003: Eric Harmon"""

fileName = "BioStudents.txt"

with open(fileName, "w") as file:
    file.write(content)

fileName = "ChemStudents.txt"

with open(fileName, "w") as file:
    file.write(content)

fileName = "PhyStudents.txt"

with open(fileName, "w") as file:
    file.write(content)

fileName = "EngStudents.txt"

with open(fileName, "w") as file:
    file.write(content)

content = """14001"""

fileName = "staffDetails.txt"

with open(fileName, "w") as file:
    file.write(content)

###################################################################

def Mark_Attendance():
    
    print("Mark Attendance")
    #Ask user if they are student or lecturer
    print("Are you a student or a lecturer?")
    print("a) Student")
    print("b) Lecturer")
    stu_lect = str(input("Select an option: "))
    
    if stu_lect == "a":
        take_or_check()
    elif stu_lect == "b":
        attend_code()
    else:
        print("Choose a correct option 'a' or 'b'.")
        return Mark_Attendance()

def take_or_check():
    Student_ID = input("What is your student ID? ")
    filename = ('attendance_' + Student_ID + '.txt')
    print("a) Take Attendance")
    print("b) Check Attendance")
    
    attend_input = str(input("Select an option: "))
    if attend_input == "a":
        # TAKE ATTENDACE
        print("Taking Attendance")
        Course_ID = input("Enter course ID: ")
        attend_stu = int(input("Enter Attendance code: "))
        current = datetime.datetime.now().time()

        # Attendance for Biology class
        if Course_ID == 'BIO1024':
            begin1 = datetime.time(9, 0, 0)
            end1 = datetime.time(9, 15, 0)
            begin2 = datetime.time(12, 0, 0)
            end2 = datetime.time(12, 15, 0)
            begin3 = datetime.time(15, 0, 0)
            end3 = datetime.time(15, 15, 0)
            if begin1 <= current <= end1:
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 2:
                            f.write("1\n")
                print("Attendance taken for Biology class 1")

            elif (begin2 <= current <= end2):
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 5:
                            f.write("1\n")
                print("Attendance taken for Biology class 2")

            elif (begin3 <= current <= end3):
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 8:
                            f.write("1\n")
                print("Attendance taken for Biology class 3")

            else:
                print("Not within time frame")

        # Attendance for Chemistry
        elif Course_ID == 'CHM1024':
            begin1 = datetime.time(10, 0, 0)
            end1 = datetime.time(10, 15, 0)
            begin2 = datetime.time(13, 0, 0)
            end2 = datetime.time(13, 15, 0)
            begin3 = datetime.time(16, 0, 0)
            end3 = datetime.time(16, 15, 0)
            if begin1 <= current <= end1:
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 3:
                            f.write("1\n")
                print("Attendance taken for Chemistry class 1")

            elif (begin2 <= current <= end2):
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 6:
                            f.write("1\n")
                print("Attendance taken for Chemistry class 2")

            elif (begin3 <= current <= end3):
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 9:
                            f.write("1\n")
                print("Attendance taken for Chemistry class 3")

            else:
                print("Not within time frame")

        # Attendance for Physics
        elif Course_ID == 'PHY1024':
            begin1 = datetime.time(11, 0, 0)
            end1 = datetime.time(11, 15, 0)
            begin2 = datetime.time(14, 0, 0)
            end2 = datetime.time(14, 15, 0)
            begin3 = datetime.time(17, 0, 0)
            end3 = datetime.time(17, 15, 0)
            if begin1 <= current <= end1:
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 4:
                            f.write("1\n")
                print("Attendance taken for Physics class 1")

            elif (begin2 <= current <= end2):
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 7:
                            f.write("1\n")
                print("Attendance taken for Physics class 2")

            elif (begin3 <= current <= end3):
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 10:
                            f.write("1\n")
                print("Attendance taken for Physics class 3")

            else:
                print("Not within time frame")

        #Attendance for English
        elif Course_ID == 'ENG1024':
            begin = datetime.time(8, 0, 0)
            end = datetime.time(8, 15, 0)
            if begin <= current <= end:
                with open(filename, 'r') as f:
                    lines = f.readlines()

                with open(filename, 'w') as f:
                    for index, line in enumerate(lines, start=1):
                        if index == 1:
                            f.write("1\n")
                        else:
                            f.write(line)
                print("Attendance taken for English")

            else:
                print("Not within time frame")

        #displays current time
        current_time = current.strftime("%H:%M:%S")
        print(current_time)
 
    elif attend_input == "b":
        # CHECK ATTENDANCE
        print("Check Attendance")
        c = Counter()
        with open(filename) as f:
            for line in f:
                vote = line.strip()
                c[vote] += 1
        #calculate attendance percentage based on 10 classes of the day.
        percent = (c['1']/10)*100
        print ("Your attendance percentage is: ", percent,"%")
        
    else:
        print("Invalid option, please try again.")
    
def attend_code():
    import random
    #enter using password
    lectpass = input("Enter password: ")
    if lectpass == "1234":
        attend_c = random.randint(100000,999999)
        #enter subject code
        lect_c = int(input("Select class: "))
        if lect_c == 1:
            print ("Attendance code for English is :", attend_c)
        elif lect_c in [2, 5, 8]:
            print ("Attendance code for Biology is :", attend_c)
        elif lect_c in [3, 6, 9]:
            print ("Attendance code for Chemistry is :", attend_c)
        elif lect_c in [4, 7, 10]:
            print ("Attendance code for Physics is :", attend_c)
        else:
            print("Invalid selection.")
            
    else:
        print("Incorrect Password.")
    
###################################################################
    
def Manage_Timetable():
    Student_ID = input("What is your student ID? ")
    filename = ('timetables_' + Student_ID + '.txt')
    print("a) Add Course")
    print("b) Update Timetable")
    print("c) Drop Course")
    print("d) Display Timetable")
    User_Input = str(input("Select one to proceed: "))

    # Add Courses
    if User_Input == 'a':
        Course_ID = input("Enter the ID of the course you want to take: ")
        with open(filename, 'a+') as f:
            f.seek(0)
            courses = f.read()
            if Course_ID in courses:
                print("You are already enrolled in this course.\n")
            elif Course_ID == 'BIO1024':
                f.write('BIO1024 Biology (UW-2-1): 9am-10am, 12pm-1pm, 3pm-4pm\n')
                print("Course successfully added.\n")
            elif Course_ID == 'CHM1024':
                f.write('CHM1024 Chemistry (JC Hall 2): 10am-11am, 1pm-2pm, 4pm-5pm\n')
                print("Course successfully added.\n")
            elif Course_ID == 'PHY1024':
                f.write('PHY1024 Physics (Hall 3 GC): 11am-12pm, 2pm-3pm, 5pm-6pm\n')
                print("Course successfully added.\n")
            elif Course_ID == 'ENG1024':
                f.write('ENG1024 English (JC Hall 1): 8am-9am')
                print("Course successfully added.\n")
            else:
                print("Invalid course ID.\n")

        # Display Timetable
        with open(filename, 'r') as f:
            lines = f.readlines()
        course_order = ['BIO', 'CHM', 'PHY', 'ENG']
        sorted_lines = sorted(lines, key=lambda line: [course_order.index(course[:3]) for course in line.split() if course[:3] in course_order])
        with open(filename, 'w') as f:
            f.writelines(sorted_lines)
        with open(filename, 'r') as f:
            print(f.read())

    # Update Courses
    elif User_Input == 'b':
        Course_ID = input("Enter the ID of the course you want to replace: ")
        New_Course = input("Enter the new course information: ")
        found = False
    
        # Available Courses
        Available_Courses = {
            'BIO1024': 'BIO1024 Biology (UW-2-1): 9am-10am, 12pm-1pm, 3pm-4pm\n',
            'CHM1024': 'CHM1024 Chemistry (JC Hall 2): 10am-11am, 1pm-2pm, 4pm-5pm\n',
            'PHY1024': 'PHY1024 Physics (Hall 3 GC): 11am-12pm, 2pm-3pm, 5pm-6pm\n',
            'ENG1024': 'ENG1024 English (JC Hall 1): 8am-9am\n'
        }

        # Open the file in read mode
        with open(filename, 'r') as f:
            lines = f.readlines()
    
        # Open the file in write mode
        with open(filename, 'w') as f:
            for line in lines:
                if Course_ID in line:
                    found = True
                    if New_Course in Available_Courses:
                        
                        # Write the new course
                        f.write(Available_Courses[New_Course])
                        
                        print(Course_ID, " has been updated to ", New_Course)
                    else:
                        print("Invalid Course ID")
                        break
                else:
                    f.write(line)
    
        if not found:
            print("You are not enrolled in ", Course_ID)


        # Display Timetable
        with open(filename, 'r') as f:
            lines = f.readlines()
        course_order = ['BIO', 'CHM', 'PHY', 'ENG']
        sorted_lines = sorted(lines, key=lambda line: [course_order.index(course[:3]) for course in line.split() if course[:3] in course_order])
        with open(filename, 'w') as f:
            f.writelines(sorted_lines)
        with open(filename, 'r') as f:
            print(f.read())

    # Drop Courses
    elif User_Input == 'c':
        Course_ID = input("Enter the ID of the course you want to drop: ")
        with open(filename, 'r') as f:
            lines = f.readlines()
        modified_lines = [line for line in lines if Course_ID not in line]
        with open(filename, 'w') as f:
            found = False
            for line in lines:
                if Course_ID in line:
                    found = True
                else:
                    f.write(line)
            if found:
                print(f"Course with ID {Course_ID} has been deleted.\n")
            else:
                print(f"Course with ID {Course_ID} not found.\n")

        # Display Timetable
        with open(filename, 'r') as f:
            lines = f.readlines()
        course_order = ['BIO', 'CHM', 'PHY', 'ENG']
        sorted_lines = sorted(lines, key=lambda line: [course_order.index(course[:3]) for course in line.split() if course[:3] in course_order])
        with open(filename, 'w') as f:
            f.writelines(sorted_lines)
        with open(filename, 'r') as f:
            print(f.read())

    # Display Timetable
    elif User_Input == 'd':
        with open(filename, 'r') as f:
            lines = f.readlines()
        course_order = ['BIO', 'CHM', 'PHY', 'ENG']
        sorted_lines = sorted(lines, key=lambda line: [course_order.index(course[:3]) for course in line.split() if course[:3] in course_order])
        with open(filename, 'w') as f:
            f.writelines(sorted_lines)
        with open(filename, 'r') as f:
            print(f.read())
    else:
        print("Invalid option. Please select a valid option.\n")

###################################################################

def check_assignment_file(student_id):
    file_prefix = "assignments_"
    file_extension = ".txt"
    filename = file_prefix + student_id + file_extension

    if os.path.exists(filename):
        print(f"Student found")
        return filename
        
    else:
        print(f"File '{filename}' does not exist.")

    return filename


def displayStatus():
    student_id = input("Enter the student ID: ")
    filename = check_assignment_file(student_id)
    

    try:
        with open(filename, 'r') as file:
            assignment_status = file.read().strip()
            print(f"Assignment status for student ID {student_id}:\n{assignment_status}")
    except FileNotFoundError:
        print("Terminating loop/program")
    except Exception as e:
        print(f"An error occurred: {e}")

def check_staffID(staffID):
    try:
        with open("staffDetails.txt", 'r') as file:
            for line in file:
                if line.strip() == str(staffID):
                    return True
        return False
    except FileNotFoundError:
        print("Error: File not found.")
        return False
    
def edit_line(filename, subjectID):
    try:
        with open(filename, 'r') as file:
            lines = file.readlines()

        found = False
        for i, line in enumerate(lines):
            if line.lower().startswith(subjectID.lower()):
                found = True

                staff_input = str(input("Would you like to change the status to [a]Submitted or [b]Pending? "))
                if staff_input == 'a':
                    lines[i] = f"{subjectID}: submitted\n"
                    print("You have changed the status to submitted.")
                elif staff_input == 'b':
                    lines[i] = f"{subjectID}: pending\n"
                    print("You have changed the status to pending.")
                else:
                    print("Please select a correct option next time.")
                break

        if not found:
            print("Incorrect Staff ID")
            return False

        with open(filename, 'w') as file:
            file.writelines(lines)

        return True

    except FileNotFoundError:
        print("Error: File not found.")
        return False
    
def edit_line_student(filename, student_id, subjectID):
    try:
        with open(filename, 'r') as file:
            lines = file.readlines()

        found = False
        for i, line in enumerate(lines):
            if line.lower().startswith(subjectID.lower()):
                found = True
                if "pending" in line.lower():
                    lines[i] = f"{subjectID}: submitted\n"
                    print("You have submitted the assignment.")
                else:
                    print("Coursework is already submitted.")
                break

        if not found:
            print("Incorrect Subject ID")
            return False

        with open(filename, 'w') as file:
            file.writelines(lines)
        return True

    except FileNotFoundError:
        print("Error: File not found.")
        return False
    
def edit_course_status():
    staffID = input("Enter Staff ID: ")
    thing = check_staffID(staffID)

    if thing == True:
        student_id = input("Enter the student ID: ")
        filename = check_assignment_file(student_id)
        subjectID = input("Enter CourseID: ")

        edit_line(filename, subjectID)
    
    else:
        print("Staff ID is incorrect, please try again\n")
        return
    
def edit_course_status_student():
    student_id = input("Enter your student ID: ")
    filename = check_assignment_file(student_id)
    subjectID = input("Enter Subject Code: ")

    edit_line_student(filename, student_id, subjectID)

def Check_Assignment():
    prompt = input("Are you a Student(a) or Staff member(b)?: ")

    if prompt == "a":
        prompt2 = input("Do you want to view (v) or update(u) your status?: ")

        if prompt2 == "v":
            displayStatus()

        elif prompt2 == "u":
            edit_course_status_student()

    elif prompt == "b":
        edit_course_status()

    else:
        print("error")

###################################################################

def Display():
#To ask to display Attendance Percentage, Timetable or Assignment Status in one menu without needing to go through them individually#   
    Student_ID = input("What is your student ID? ")
    asking = 'i'
    
    while asking != 'c':
    
        asking = str(input("Which one do you want to Display? \na)Attendance \nb)Timetable \nc)Assignment Status \n :"))
            
        
                
        if asking == 'a':
                        print("Attendance")
                        filename = ('attendance_' + Student_ID + '.txt')
                        c = Counter()
                        with open(filename) as f:
                            for line in f:
                                vote = line.strip()
                                c[vote] += 1
                        
                        percent = (c['1']/10)*100
                        print ("Your attendance percentage is: ", percent,"% \n")
        elif asking == 'b':
                        print("Timetable")
                        filename = ('timetables_' + Student_ID + '.txt')
                        with open(filename, 'r') as f:
                            lines = f.readlines()
                        course_order = ['BIO', 'CHM', 'PHY', 'ENG']
                        sorted_lines = sorted(lines, key=lambda line: [course_order.index(course[:3]) for course in line.split() if course[:3] in course_order])
                        with open(filename, 'w') as f:
                            f.writelines(sorted_lines)
                        with open(filename, 'r') as f:
                            print(f.read())
                        
        elif asking == 'c':
                        print("Assignment Status")
                        filename = check_assignment_file(Student_ID)
                    

                        try:
                            with open(filename, 'r') as file:
                                assignment_status = file.read().strip()
                                print(f"Assignment status for student ID {Student_ID}:\n{assignment_status}")
                        except FileNotFoundError:
                            print("Terminating loop/program")
                        except Exception as e:
                            print(f"An error occurred: {e}")

        else:
                print("Invalid Option")      

###################################################################

while User_Input != 'e':
    print("Menu:")
    print("a) Mark Attendance")
    print("b) Manage Timetables")
    print("c) Submit/Check Assignments")
    print("d) Display")
    print("e) Exit")
    User_Input = str(input("Select one to proceed: "))
    if User_Input == 'a':
        Mark_Attendance()
    elif User_Input == 'b':
        Manage_Timetable()
    elif User_Input == 'c':
        Check_Assignment()
    elif User_Input == 'd':
        Display()
    elif User_Input == 'e':
        break
    else:
        print("Invalid option. Please select a valid option.\n")
